// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MovieLibrary_Project.Migrations
{
    [DbContext(typeof(MediaLibraryContext))]
    partial class MediaLibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenreMedia", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("GenreMedia");
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("NameInMedia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RealName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Casts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MediaId = 3,
                            NameInMedia = "Walter White",
                            PersonImage = "",
                            RealName = "Bryan Cranston"
                        },
                        new
                        {
                            Id = 2,
                            MediaId = 3,
                            NameInMedia = "Jesse Pinkman",
                            PersonImage = "",
                            RealName = "Aaron Paul"
                        },
                        new
                        {
                            Id = 3,
                            MediaId = 1,
                            NameInMedia = "Dom Cobb",
                            PersonImage = "",
                            RealName = "Leonardo DiCaprio"
                        },
                        new
                        {
                            Id = 4,
                            MediaId = 1,
                            NameInMedia = "Robert Fischer",
                            PersonImage = "",
                            RealName = "Cillian Murphy"
                        },
                        new
                        {
                            Id = 5,
                            MediaId = 2,
                            NameInMedia = "Neo",
                            PersonImage = "",
                            RealName = "Keanu Reeves"
                        },
                        new
                        {
                            Id = 6,
                            MediaId = 2,
                            NameInMedia = "Morpheus",
                            PersonImage = "",
                            RealName = "Laurence Fishburne"
                        });
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.ToTable("Episodes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EpisodeNumber = 1,
                            SeasonId = 1,
                            Title = "Pilot"
                        },
                        new
                        {
                            Id = 2,
                            EpisodeNumber = 2,
                            SeasonId = 1,
                            Title = "Cat's in the Bag..."
                        },
                        new
                        {
                            Id = 3,
                            EpisodeNumber = 3,
                            SeasonId = 1,
                            Title = "...And the Bag's in the River"
                        },
                        new
                        {
                            Id = 4,
                            EpisodeNumber = 4,
                            SeasonId = 1,
                            Title = "Cancer Man"
                        },
                        new
                        {
                            Id = 5,
                            EpisodeNumber = 5,
                            SeasonId = 1,
                            Title = "Gray Matter"
                        },
                        new
                        {
                            Id = 6,
                            EpisodeNumber = 6,
                            SeasonId = 1,
                            Title = "Crazy Handful of Nothin'"
                        },
                        new
                        {
                            Id = 7,
                            EpisodeNumber = 7,
                            SeasonId = 1,
                            Title = "A No-Rough-Stuff-Type Deal"
                        },
                        new
                        {
                            Id = 8,
                            EpisodeNumber = 1,
                            SeasonId = 2,
                            Title = "Seven Thirty-Seven"
                        },
                        new
                        {
                            Id = 9,
                            EpisodeNumber = 2,
                            SeasonId = 2,
                            Title = "Grilled"
                        },
                        new
                        {
                            Id = 10,
                            EpisodeNumber = 3,
                            SeasonId = 2,
                            Title = "Bit by a Dead Bee"
                        },
                        new
                        {
                            Id = 11,
                            EpisodeNumber = 4,
                            SeasonId = 2,
                            Title = "Down"
                        },
                        new
                        {
                            Id = 12,
                            EpisodeNumber = 5,
                            SeasonId = 2,
                            Title = "Breakage"
                        },
                        new
                        {
                            Id = 13,
                            EpisodeNumber = 6,
                            SeasonId = 2,
                            Title = "Peekaboo"
                        },
                        new
                        {
                            Id = 14,
                            EpisodeNumber = 7,
                            SeasonId = 2,
                            Title = "ABQ"
                        });
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMovie")
                        .HasColumnType("bit");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Writer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A thief who steals corporate secrets through the use of dream-sharing technology.",
                            Director = "Christopher Nolan",
                            IsMovie = true,
                            PosterPath = "path_to_inception_poster.jpg",
                            Rating = 8.8000000000000007,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception",
                            Writer = "Christopher Nolan"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A computer hacker learns about the true nature of his reality.",
                            Director = "Lana Wachowski, Lilly Wachowski",
                            IsMovie = true,
                            PosterPath = "path_to_matrix_poster.jpg",
                            Rating = 8.6999999999999993,
                            ReleaseDate = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix",
                            Writer = "Lana Wachowski, Lilly Wachowski"
                        },
                        new
                        {
                            Id = 3,
                            Description = "A high school chemistry teacher turned methamphetamine manufacturer.",
                            Director = "Vince Gilligan",
                            IsMovie = false,
                            PosterPath = "path_to_breaking_bad_poster.jpg",
                            Rating = 9.5,
                            ReleaseDate = new DateTime(2008, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Breaking Bad",
                            Writer = "Vince Gilligan"
                        });
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Seasons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MediaId = 3,
                            SeasonNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            MediaId = 3,
                            SeasonNumber = 2
                        });
                });

            modelBuilder.Entity("GenreMedia", b =>
                {
                    b.HasOne("MovieLibrary_Project.Models.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieLibrary_Project.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Cast", b =>
                {
                    b.HasOne("MovieLibrary_Project.Models.Media", "Media")
                        .WithMany("Casts")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Episode", b =>
                {
                    b.HasOne("MovieLibrary_Project.Models.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Season", b =>
                {
                    b.HasOne("MovieLibrary_Project.Models.Media", "Media")
                        .WithMany("Seasons")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Media", b =>
                {
                    b.Navigation("Casts");

                    b.Navigation("Seasons");
                });

            modelBuilder.Entity("MovieLibrary_Project.Models.Season", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
